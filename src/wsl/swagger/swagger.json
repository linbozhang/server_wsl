{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/artarget/": {
            "get": {
                "tags": [
                    "artarget"
                ],
                "description": "get Artarget",
                "operationId": "ArtargetController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Artarget"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "artarget"
                ],
                "description": "create Artarget",
                "operationId": "ArtargetController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Artarget content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Artarget"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Artarget"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/artarget/{id}": {
            "get": {
                "tags": [
                    "artarget"
                ],
                "description": "get Artarget by id",
                "operationId": "ArtargetController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Artarget"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "artarget"
                ],
                "description": "update the Artarget",
                "operationId": "ArtargetController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Artarget content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Artarget"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Artarget"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "artarget"
                ],
                "description": "delete the Artarget",
                "operationId": "ArtargetController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/brand/": {
            "get": {
                "tags": [
                    "brand"
                ],
                "description": "get Brand",
                "operationId": "BrandController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "brand"
                ],
                "description": "create Brand",
                "operationId": "BrandController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Brand content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Brand"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/brand/{id}": {
            "get": {
                "tags": [
                    "brand"
                ],
                "description": "get Brand by id",
                "operationId": "BrandController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "brand"
                ],
                "description": "update the Brand",
                "operationId": "BrandController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Brand content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Brand"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "brand"
                ],
                "description": "delete the Brand",
                "operationId": "BrandController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/shwo/": {
            "get": {
                "tags": [
                    "shwo"
                ],
                "description": "get Shwo",
                "operationId": "ShwoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Shwo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "shwo"
                ],
                "description": "create Shwo",
                "operationId": "ShwoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Shwo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Shwo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Shwo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/shwo/{id}": {
            "get": {
                "tags": [
                    "shwo"
                ],
                "description": "get Shwo by id",
                "operationId": "ShwoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Shwo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "shwo"
                ],
                "description": "update the Shwo",
                "operationId": "ShwoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Shwo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Shwo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Shwo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "shwo"
                ],
                "description": "delete the Shwo",
                "operationId": "ShwoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/sort/": {
            "get": {
                "tags": [
                    "sort"
                ],
                "description": "get Sort",
                "operationId": "SortController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Sort"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "sort"
                ],
                "description": "create Sort",
                "operationId": "SortController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Sort content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sort"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.Sort"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/sort/{id}": {
            "get": {
                "tags": [
                    "sort"
                ],
                "description": "get Sort by id",
                "operationId": "SortController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Sort"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "sort"
                ],
                "description": "update the Sort",
                "operationId": "SortController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for Sort content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Sort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Sort"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "sort"
                ],
                "description": "delete the Sort",
                "operationId": "SortController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Artarget": {
            "title": "Artarget",
            "type": "object",
            "properties": {
                "ActiveFlag": {
                    "type": "integer",
                    "format": "int32"
                },
                "BrandId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Createtime": {
                    "type": "string",
                    "format": "string"
                },
                "IconUrl": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProductName": {
                    "type": "string"
                },
                "RedirectUrl": {
                    "type": "string"
                },
                "ShowId": {
                    "type": "integer",
                    "format": "int64"
                },
                "ShowType": {
                    "type": "integer",
                    "format": "int32"
                },
                "ShowUrl": {
                    "type": "string"
                },
                "SortId": {
                    "type": "integer",
                    "format": "int64"
                },
                "VuforiaId": {
                    "type": "string"
                },
                "WslName": {
                    "type": "string"
                }
            }
        },
        "models.Brand": {
            "title": "Brand",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LogoUrl": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                }
            }
        },
        "models.RawBrand": {
            "title": "RawBrand",
            "type": "object",
            "properties": {
                "Data": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "format": "byte"
                    }
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                }
            }
        },
        "models.Shwo": {
            "title": "Shwo",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                },
                "Quality": {
                    "type": "string"
                },
                "Size": {
                    "type": "integer",
                    "format": "int64"
                },
                "Type": {
                    "type": "integer",
                    "format": "int32"
                },
                "Url": {
                    "type": "string"
                }
            }
        },
        "models.Sort": {
            "title": "Sort",
            "type": "object",
            "properties": {
                "Detail": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "artarget",
            "description": "ArtargetController operations for Artarget\n"
        },
        {
            "name": "brand",
            "description": "BrandController operations for Brand\n"
        },
        {
            "name": "shwo",
            "description": "ShwoController operations for Shwo\n"
        },
        {
            "name": "sort",
            "description": "SortController operations for Sort\n"
        }
    ]
}